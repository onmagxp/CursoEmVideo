/*
Aula de CSS: Formas de Centralizar uma Div

Centralizar uma div pode ser feito de várias maneiras, dependendo do contexto e do layout desejado. Vamos explorar as técnicas mais comuns para centralizar uma div tanto horizontalmente quanto verticalmente.

1. Centralizar uma Div Horizontalmente com `margin: auto`

Esta é uma das formas mais simples de centralizar uma div horizontalmente.

Exemplo:
*/

.container {
    width: 80%; /* Define a largura da div */
    margin: 0 auto; /* Centraliza horizontalmente */
    /* Outras propriedades possíveis: padding, background-color, border */
}

/*
Explicação:
- `margin: 0 auto;` define margens automáticas nas laterais, centralizando a div no contêiner pai.
*/

/* 
2. Centralizar uma Div Horizontalmente com Flexbox

Flexbox é uma técnica moderna e poderosa para centralização.

Exemplo:
*/

.flex-container {
    display: flex; /* Define o contêiner como flexível */
    justify-content: center; /* Centraliza horizontalmente */
    /* Outras propriedades possíveis: align-items, flex-direction, flex-wrap */
}

.flex-item {
    width: 50%; /* Define a largura do item flexível */
    /* Outras propriedades possíveis: padding, background-color, border */
}

/*
Explicação:
- `justify-content: center;` centraliza horizontalmente os itens flexíveis dentro do contêiner flexível.
*/

/* 
3. Centralizar uma Div Verticalmente com Flexbox

Além da centralização horizontal, Flexbox também facilita a centralização vertical.

Exemplo:
*/

.flex-container-vertical {
    display: flex; /* Define o contêiner como flexível */
    justify-content: center; /* Centraliza horizontalmente */
    align-items: center; /* Centraliza verticalmente */
    height: 100vh; /* Define a altura do contêiner */
    /* Outras propriedades possíveis: flex-direction, flex-wrap */
}

.flex-item-vertical {
    width: 50%; /* Define a largura do item flexível */
    /* Outras propriedades possíveis: padding, background-color, border */
}

/*
Explicação:
- `align-items: center;` centraliza verticalmente os itens flexíveis dentro do contêiner flexível.
- `height: 100vh;` define a altura do contêiner como 100% da altura da janela de visualização.
*/

/* 
4. Centralizar uma Div com Grid Layout

Grid Layout é outra técnica moderna para centralização.

Exemplo:
*/

.grid-container {
    display: grid; /* Define o contêiner como grid */
    place-items: center; /* Centraliza horizontalmente e verticalmente */
    height: 100vh; /* Define a altura do contêiner */
    /* Outras propriedades possíveis: grid-template-rows, grid-template-columns */
}

.grid-item {
    width: 50%; /* Define a largura do item do grid */
    /* Outras propriedades possíveis: padding, background-color, border */
}

/*
Explicação:
- `place-items: center;` centraliza horizontalmente e verticalmente os itens do grid dentro do contêiner do grid.
- `height: 100vh;` define a altura do contêiner como 100% da altura da janela de visualização.
*/

/* 
5. Centralizar uma Div com `position: absolute`

Esta técnica usa a posição absoluta para centralização.

Exemplo:
*/

.absolute-container {
    position: relative; /* Define o contêiner pai como relativo */
    height: 100vh; /* Define a altura do contêiner */
}

.absolute-item {
    position: absolute; /* Define o item como absoluto */
    top: 50%; /* Posiciona o item 50% a partir do topo */
    left: 50%; /* Posiciona o item 50% a partir da esquerda */
    transform: translate(-50%, -50%); /* Move o item para centralizar */
    width: 50%; /* Define a largura do item */
    /* Outras propriedades possíveis: padding, background-color, border */
}

/*
Explicação:
- `position: relative;` no contêiner pai permite que o item absoluto seja posicionado em relação a ele.
- `top: 50%;` e `left: 50%;` posicionam o item no centro.
- `transform: translate(-50%, -50%);` ajusta a posição para centralizar perfeitamente.
*/

/* 
6. Centralizar uma Div com `text-align: center`

Esta técnica é útil para centralizar conteúdo inline dentro de uma div.

Exemplo:
*/

.center-text {
    text-align: center; /* Centraliza o texto */
    /* Outras propriedades possíveis: padding, background-color, border */
}

/*
Explicação:
- `text-align: center;` centraliza texto e elementos inline dentro da div.
*/

/* 
Conclusão:
Nesta aula, exploramos várias técnicas para centralizar uma div, incluindo o uso de margin, Flexbox, Grid Layout, position e text-align. Cada método tem seu uso específico e pode ser escolhido com base no layout desejado.

Fim da aula sobre centralização de divs.
*/

