/* Exemplo Completo de Flexbox com Descrições e Exemplos */

/* Contêiner Flex: Ativa o Flexbox */
.container {
    display: flex;
    /* Ativa o modo Flexbox para o contêiner */
}

/* flex-direction: Define a direção dos itens no contêiner */
.container {
    flex-direction: row; /* Padrão, alinha os itens em uma linha horizontal */
    /* Exemplos adicionais:
    flex-direction: column;       Alinha os itens em uma coluna vertical
    flex-direction: row-reverse;  Inverte a ordem dos itens na linha horizontal
    flex-direction: column-reverse; Inverte a ordem dos itens na coluna vertical
    */
}

/* justify-content: Alinha os itens no eixo principal (horizontal se 'row', vertical se 'column') */
.container {
    justify-content: flex-start; /* Padrão, alinha os itens no início */
    /* Exemplos adicionais:
    justify-content: flex-end;   Alinha os itens no final
    justify-content: center;     Centraliza os itens
    justify-content: space-between; Espaça os itens igualmente, com o primeiro no início e o último no final
    justify-content: space-around; Espaça os itens igualmente, com espaços iguais ao redor
    justify-content: space-evenly; Espaça os itens com espaços iguais entre eles
    */
}

/* align-items: Alinha os itens no eixo cruzado (vertical se 'row', horizontal se 'column') */
.container {
    align-items: stretch; /* Padrão, estica os itens para preencher o contêiner */
    /* Exemplos adicionais:
    align-items: flex-start; Alinha os itens no início
    align-items: flex-end;   Alinha os itens no final
    align-items: center;     Centraliza os itens
    align-items: baseline;   Alinha os itens pela linha base do texto
    */
}

/* flex-wrap: Permite que os itens se movam para a próxima linha, se necessário */
.container {
    flex-wrap: nowrap; /* Padrão, todos os itens ficam em uma linha */
    /* Exemplos adicionais:
    flex-wrap: wrap;        Itens vão para a próxima linha se não houver espaço suficiente
    flex-wrap: wrap-reverse; Itens vão para a próxima linha, mas na direção inversa
    */
}

/* flex-flow: Shorthand para flex-direction e flex-wrap */
.container {
    flex-flow: row nowrap; /* Padrão, combinação de flex-direction e flex-wrap */
    /* Exemplo adicional:
    flex-flow: column wrap;
    */
}

/* align-content: Alinha as linhas do contêiner quando há espaço extra no eixo cruzado */
.container {
    align-content: stretch; /* Padrão, estica as linhas para preencher o contêiner */
    /* Exemplos adicionais:
    align-content: flex-start; Alinha as linhas no início
    align-content: flex-end;   Alinha as linhas no final
    align-content: center;     Centraliza as linhas
    align-content: space-between; Espaça as linhas igualmente, com a primeira no início e a última no final
    align-content: space-around; Espaça as linhas igualmente, com espaços iguais ao redor
    align-content: space-evenly; Espaça as linhas com espaços iguais entre elas
    */
}

/* Propriedades dos Itens Flex */

/* order: Controla a ordem dos itens */
.item {
    order: 0; /* Padrão, valores negativos ou positivos alteram a ordem */
    /* Exemplo adicional:
    order: 2;
    */
}

/* flex-grow: Define a capacidade do item de crescer para ocupar espaço extra */
.item {
    flex-grow: 0; /* Padrão, o item não cresce */
    /* Exemplo adicional:
    flex-grow: 1;
    */
}

/* flex-shrink: Define a capacidade do item de encolher se necessário */
.item {
    flex-shrink: 1; /* Padrão, o item pode encolher */
    /* Exemplo adicional:
    flex-shrink: 0;
    */
}

/* flex-basis: Define o tamanho inicial do item antes de qualquer espaço extra ser distribuído */
.item {
    flex-basis: auto; /* Padrão, tamanho inicial automático */
    /* Exemplos adicionais:
    flex-basis: 100px; Define o tamanho inicial como 100 pixels
    flex-basis: 20%;   Define o tamanho inicial como 20% do contêiner
    */
}

/* flex: Shorthand para flex-grow, flex-shrink e flex-basis */
.item {
    flex: 0 1 auto; /* Padrão, combinação de flex-grow, flex-shrink e flex-basis */
    /* Exemplo adicional:
    flex: 1 0 100px; flex-grow: 1, flex-shrink: 0, flex-basis: 100px
    */
}

/* align-self: Alinha o item individualmente, sobrescrevendo align-items do contêiner */
.item {
    align-self: auto; /* Padrão, usa o valor de align-items do contêiner */
    /* Exemplos adicionais:
    align-self: flex-start; Alinha o item no início
    align-self: flex-end;   Alinha o item no final
    align-self: center;     Centraliza o item
    align-self: stretch;    Estica o item para preencher o contêiner
    align-self: baseline;   Alinha o item pela linha base do texto
    */
}

/* Exemplo Prático Completo */
<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Flexbox Exemplo Completo</title>
    <style>
        .container {
            display: flex;
            flex-direction: row;
            justify-content: space-around;
            align-items: center;
            flex-wrap: wrap;
            height: 100vh;
        }
        .item {
            background-color: lightblue;
            padding: 20px;
            margin: 10px;
            flex: 1 1 100px;
            order: 2;
            align-self: center;
        }
        .item:nth-child(1) {
            order: 1;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="item">Item 1</div>
        <div class="item">Item 2</div>
        <div class="item">Item 3</div>
    </div>
</body>
</html>
